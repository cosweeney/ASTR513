#------Experiments to test (separated with commas)-----
# To see all the available ones, please look in the
# montepython/likelihoods folder. Every folder there is a valid likelihood to
# test.
data.experiments=['bbn_prior', 'eftboss']
data.over_sampling=[1, 4]

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

# Cosmological parameters list
data.parameters['omega_cdm']    = [ 0.120,   None, None, 0.01,    1, 'cosmo']
data.parameters['h']            = [ 0.675,   None, None, 0.05,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [ 3.044,   None, None, 0.10,    1, 'cosmo']

data.parameters['fEDE']         = [ 0.1,     0.001, 0.5, 0.03,    1, 'cosmo']
data.parameters['log10z_c']     = [ 3.6,     3.0, 4.3,  0.3,    1, 'cosmo']
data.parameters['thetai_scf']   = [ 0.5,     0.1, 3.1,  0.25,    1, 'cosmo']
data.parameters['scf_parameters__1'] = [1.0,    None,  None,  0.0, 1, 'cosmo']
data.parameters['scf_parameters__2'] = [1.0,    None, None, 0.0, 1, 'cosmo']
data.parameters['scf_parameters__3'] = [1.0,    None, None, 0.0, 1, 'cosmo']
data.parameters['scf_parameters__4'] = [1.0,    None, None, 0.0, 1, 'cosmo']
data.parameters['scf_parameters__5'] = [1.0,    None,  None,  0.0, 1, 'cosmo']
data.parameters['scf_parameters__6'] = [0.0,   None, None, 0.0, 1, 'cosmo']



#Fixed parameters
data.cosmo_arguments['omega_b'] = 0.02268
data.cosmo_arguments['n_s'] = 0.965
data.cosmo_arguments['N_ur'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611

data.cosmo_arguments['Omega_Lambda'] = 0
data.cosmo_arguments['Omega_fld'] = 0
data.cosmo_arguments['Omega_scf'] = -1
data.cosmo_arguments['n_scf'] = 3
data.cosmo_arguments['CC_scf'] = 1 
#data.cosmo_arguments['scf_parameters'] = '1, 1, 1, 1, 1, 0.0'
data.cosmo_arguments['scf_tuning_index'] = 3
data.cosmo_arguments['attractor_ic_scf'] = 'no'

# EFT nuisance parameters
data.parameters['b1_hN']  = [2.,   0.,   4., 0.5, 1,  'nuisance']
data.parameters['c2_hN']  = [0., -10.,  10., 0.5, 1,  'nuisance']
data.parameters['b1_hS']  = [2.,   0.,   4., 0.5, 1,  'nuisance']
data.parameters['c2_hS']  = [0., -10.,  10., 0.5, 1,  'nuisance']
data.parameters['b1_lN']  = [2.,   0.,   4., 0.5, 1,  'nuisance']
data.parameters['c2_lN']  = [0., -10.,  10., 0.5, 1,  'nuisance']
data.parameters['b1_lS']  = [2.,   0.,   4., 0.5, 1,  'nuisance']
data.parameters['c2_lS']  = [0., -10.,  10., 0.5, 1,  'nuisance']

# Derived parameter list
data.parameters['Omega_m']         = [0, None, None, 0,     1,   'derived']
data.parameters['A_s']             = [0, None, None, 0,  1e-9,   'derived']
data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']
data.parameters['rs_rec']          = [0, None, None, 0,     1,   'derived']
data.parameters['da_rec']          = [0, None, None, 0,     1,   'derived']


# Other cosmo parameters (fixed parameters, precision parameters, etc.)
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

data.cosmo_arguments['output'] = 'mPk'
data.cosmo_arguments['P_k_max_h/Mpc'] = 1.

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N = 10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step = 10
